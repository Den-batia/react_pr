{"version":3,"sources":["comp/textarea/Textarea.module.css","comp/textarea/Textarea.jsx","comp/hoc/WithScroll.js","comp/PeopleComponent/PeopleComponent.jsx"],"names":["module","exports","Textarea","props","className","s","a","onClick","dellElement","date","milisec","Date","current_day","getDay","day","toLocaleDateString","data","post_date","text","news_text","img","src","news_img_link","alt","comment","top_comment","like","dislike","withScroll","ScrollComponent","fetchMoreData","_url","json_url","num_load","loadNextNewsThunk","this","loadInitDataThunk","prevprops","array","length","tag","updateTag","is_loadinInitData","dataLength","next","hasMore","map","i","index","React","Component","connect","state","one"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,EAAI,oBAAoB,KAAO,uBAAuB,KAAO,uBAAuB,IAAM,sBAAsB,KAAO,uBAAuB,QAAU,0BAA0B,KAAO,uBAAuB,QAAU,4B,wICsC7NC,EApCA,SAACC,GAkBZ,OAEI,sBAAKC,UAAWC,IAAEC,EAAGC,QAAS,kBAAMJ,EAAMK,eAA1C,UACI,qBAAKJ,UAAaC,IAAEI,KAApB,SAnBK,SAACC,GACV,IAAMD,EAAO,IAAIE,KAAe,IAAVD,GAChBE,GAAc,IAAID,MAAOE,SAC3BC,EAAML,EAAKI,SAIf,OAHY,IAARC,IACAA,GAAO,GAEPA,IAAQF,EACD,6CAEPA,IAAiBE,EAAM,EAChB,iCAEJL,EAAKM,qBAMmBN,CAAKN,EAAMa,KAAKC,aAC3C,qBAAKb,UAAWC,IAAEa,KAAlB,SAAyBf,EAAMa,KAAKG,YAEpC,cAAC,gBAAD,CAAef,UAAWC,IAAEe,IACxBC,IAAKlB,EAAMa,KAAKM,cAChBC,IAAK,UAGT,qBAAKnB,UAAaC,IAAEmB,QAApB,SAA8BrB,EAAMa,KAAKS,cACzC,qBAAKrB,UAAWC,IAAEqB,OAClB,qBAAKtB,UAAWC,IAAEsB,c,QCqBfC,IAjDI,WAGf,IAQMC,EAXe,4MAajBC,cAAgB,WACZ,IAAMC,EAAO,EAAK5B,MAAM6B,SAAW,SAAiC,EAAtB,EAAK7B,MAAM8B,SAAe,SAAiC,EAAtB,EAAK9B,MAAM8B,SAAe,GAC7G,EAAK9B,MAAM+B,kBAAkBH,IAfhB,kEAmBbI,KAAKhC,MAAMiC,kBAAkBD,KAAKhC,MAAM6B,YAnB3B,yCAsBEK,GACc,IAA1BF,KAAKhC,MAAMmC,MAAMC,QAChBJ,KAAKhC,MAAMiC,kBAAkBD,KAAKhC,MAAM6B,UAE5CG,KAAKhC,MAAMqC,MAAQH,EAAUG,KAAOL,KAAKhC,MAAMsC,UAAUN,KAAKhC,MAAMqC,OA1BvD,+BA8Bb,OACI,qCACCL,KAAKhC,MAAMuC,mBAAqB,uCAEhCP,KAAKhC,MAAMuC,mBACR,cAAC,IAAD,CACIC,WAAYR,KAAKhC,MAAMmC,MAAMC,OAC7BK,KAAMT,KAAKL,cACXe,SAAS,EAHb,SAKSV,KAAKhC,MAAMmC,MAAMQ,KAAI,SAACC,EAAGC,GAAJ,OAAe,cAAC,EAAD,CAAsBhC,KAAM+B,GAAbC,eAxCvD,GAWSC,IAAMC,WAmCpC,OAAOC,aA3CiB,SAACC,GACrB,MAAM,CACFd,MAAOc,EAAMC,IAAIf,MACjBI,kBAAmBU,EAAMC,IAAIX,kBAC7BT,SAAUmB,EAAMC,IAAIpB,YAuCI,CAACC,sBAAmBE,sBAAmBK,eAAhEU,CAA4EtB,K,iCCnDvF,4BAUesB,uBAPS,WACpB,MAAO,CACHnB,SAAU,WACVQ,IAAK,8BAI2B,GAAzBW,CAA6BvB","file":"static/js/6.a39656c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"a\":\"Textarea_a__12u7-\",\"grid\":\"Textarea_grid__3raD1\",\"text\":\"Textarea_text__1WlTS\",\"img\":\"Textarea_img__j3xxX\",\"like\":\"Textarea_like__2Clwl\",\"dislike\":\"Textarea_dislike__1pnwC\",\"date\":\"Textarea_date__Mp0qx\",\"comment\":\"Textarea_comment__2WDr4\"};","import s from './Textarea.module.css'\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { NavLink } from \"react-router-dom\"\r\nlet Textarea = (props) => {\r\n\r\n    const date = (milisec) => {\r\n        const date = new Date(milisec * 1000)\r\n        const current_day = new Date().getDay()\r\n        let day = date.getDay()\r\n        if (day === 6){\r\n            day = -1\r\n        }\r\n        if (day === current_day){\r\n            return 'Сегодня'\r\n        }\r\n        if (current_day === (day + 1)){\r\n            return 'Вчера'\r\n        }\r\n        return date.toLocaleDateString()\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.a} onClick={() => props.dellElement()}>\r\n            <div className = {s.date}>{date(props.data.post_date)}</div>\r\n            <div className={s.text}>{props.data.news_text}</div>\r\n            \r\n            <LazyLoadImage className={s.img}\r\n                src={props.data.news_img_link}\r\n                alt={'ddddd'}>\r\n            </LazyLoadImage>\r\n            \r\n            <div className = {s.comment}>{props.data.top_comment}</div>\r\n            <div className={s.like}></div>\r\n            <div className={s.dislike}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textarea","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { connect } from \"react-redux\";\r\nimport Textarea from '../textarea/Textarea'\r\nimport { loadNextNewsThunk, loadInitDataThunk, updateTag } from '../../redax/one-reduser' \r\n\r\nconst withScroll = () => {\r\n\r\n\r\n    const mapStateToProps = (state) => {\r\n        return{\r\n            array: state.one.array,\r\n            is_loadinInitData: state.one.is_loadinInitData,\r\n            num_load: state.one.num_load,\r\n        }\r\n    }\r\n\r\n    class ScrollComponent extends React.Component{\r\n\r\n        fetchMoreData = ()=> {\r\n            const _url = this.props.json_url + '?from=' + this.props.num_load * 5 + '&too=' + (this.props.num_load * 5 + 5)\r\n            this.props.loadNextNewsThunk(_url)\r\n        }\r\n\r\n        componentDidMount(){\r\n            this.props.loadInitDataThunk(this.props.json_url)\r\n        }\r\n\r\n        componentDidUpdate(prevprops){\r\n            if(this.props.array.length===0){\r\n                this.props.loadInitDataThunk(this.props.json_url)\r\n            }\r\n            this.props.tag !== prevprops.tag || this.props.updateTag(this.props.tag)\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <>\r\n                {this.props.is_loadinInitData && <div>init</div>}\r\n\r\n                {this.props.is_loadinInitData || \r\n                    <InfiniteScroll\r\n                        dataLength={this.props.array.length}\r\n                        next={this.fetchMoreData}\r\n                        hasMore={true}>\r\n                        {/* loader={<h4>Loading...</h4>}> */}\r\n                            {this.props.array.map((i, index) => (<Textarea key={index} data={i}/>))}\r\n                    </InfiniteScroll>\r\n                }\r\n                </>)\r\n        }\r\n    }\r\n    return connect(mapStateToProps, {loadNextNewsThunk, loadInitDataThunk, updateTag})(ScrollComponent)\r\n}\r\n\r\nexport default withScroll","\r\nimport { connect } from 'react-redux';\r\nimport withScroll from '../hoc/WithScroll'\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n        json_url: '/people/',\r\n        tag: 'Люди'\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, {})(withScroll())"],"sourceRoot":""}